<UserControl
    x:Class="ClipboardCanvas.UserControls.SuggestedActionsControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:ClipboardCanvas.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:tua="using:CommunityToolkit.WinUI.UI.Animations"
    xmlns:vm="using:ClipboardCanvas.ViewModels.UserControls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    Background="Transparent"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="SuggestedActionsContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="16,0,16,0" />
            <Setter Property="Height" Value="48" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter
                            x:Name="Root"
                            Height="{TemplateBinding Height}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                            CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                            CheckMode="{ThemeResource ListViewItemCheckMode}"
                            ContentMargin="{TemplateBinding Padding}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Control.IsTemplateFocusTarget="True"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                            DragBackground="{ThemeResource ListViewItemDragBackground}"
                            DragForeground="{ThemeResource ListViewItemDragForeground}"
                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                            FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                            PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                            PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                            PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                            RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                            RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                            RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                            SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                            SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                            SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                            SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                            SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Selected" />
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                            <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled" />
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.RevealBorderThickness" Value="0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ListViewItemPresenter>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <UserControl.KeyboardAccelerators>
        <KeyboardAccelerator
            Key="Number1"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="Number2"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control" />
        <KeyboardAccelerator
            Key="Number3"
            Invoked="KeyboardAccelerator_Invoked"
            Modifiers="Control" />
    </UserControl.KeyboardAccelerators>

    <Grid>
        <ListView
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            IsItemClickEnabled="True"
            ItemClick="ListView_ItemClick"
            ItemContainerStyle="{StaticResource SuggestedActionsContainerStyle}"
            ItemsSource="{x:Bind ViewModel.Items}"
            ScrollViewer.HorizontalScrollBarVisibility="Auto"
            ScrollViewer.HorizontalScrollMode="Auto"
            ScrollViewer.VerticalScrollBarVisibility="Disabled"
            ScrollViewer.VerticalScrollMode="Disabled"
            SelectionMode="None">

            <ListView.ItemContainerTransitions>
                <TransitionCollection>
                    <PopupThemeTransition />
                </TransitionCollection>
            </ListView.ItemContainerTransitions>

            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Spacing="0" />
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:SuggestedActionsControlItemViewModel">
                    <StackPanel Orientation="Horizontal" Spacing="15">
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
                            <FontIcon
                                x:Name="IconGlyph"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind GlyphIconLoad, Mode=OneWay}"
                                Glyph="{x:Bind GlyphIcon, Mode=OneWay}" />
                            <Viewbox
                                x:Name="IconImage"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IconImageLoad, Mode=OneWay}"
                                StretchDirection="DownOnly">
                                <Image Source="{Binding IconImage}" Stretch="UniformToFill" />
                            </Viewbox>
                        </Grid>
                        <TextBlock
                            Margin="0,0,0,2"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Text="{x:Bind DisplayText, Mode=OneWay}" />
                    </StackPanel>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <TextBlock
            x:Name="NoActionsText"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            x:Load="{x:Bind ViewModel.NoActionsAvailableLoad, Mode=OneWay}"
            Opacity="0.0"
            Text="No suggestions available">
            <tua:Implicit.ShowAnimations>
                <tua:OpacityAnimation To="0.6" Duration="0:0:0.3" />
            </tua:Implicit.ShowAnimations>
            <tua:Implicit.HideAnimations>
                <tua:OpacityAnimation To="0" Duration="0:0:0.3" />
            </tua:Implicit.HideAnimations>
        </TextBlock>
    </Grid>
</UserControl>
