<UserControl
    x:Class="ClipboardCanvas.UserControls.NavigationToolBarControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Windows10version1903="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 8)"
    xmlns:animvis="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gxt="using:ClipboardCanvas.GlobalizationExtensions"
    xmlns:local="using:ClipboardCanvas.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:tua="using:CommunityToolkit.WinUI.UI.Animations"
    xmlns:uc="using:ClipboardCanvas.UserControls"
    xmlns:vc="using:ClipboardCanvas.ValueConverters"
    xmlns:vm="using:ClipboardCanvas.ViewModels.UserControls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <!--  Converters  -->
                    <vc:InterfaceToNavigationControlViewModelConverter x:Key="InterfaceToNavigationControlViewModelConverter" />
                    <vc:InterfaceToSuggestedActionsControlViewModelConverter x:Key="InterfaceToSuggestedActionsControlViewModelConverter" />

                    <!--  Theme dictionary  -->
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light">
                            <!--  TODO: Regression  -->

                            <!--<AcrylicBrush
                                x:Key="NavigationBarBackground"
                                Windows10version1903:TintLuminosityOpacity="0.60"
                                BackgroundSource="HostBackdrop"
                                FallbackColor="{ThemeResource SolidBackgroundAcrylic}"
                                TintColor="{ThemeResource SolidBackgroundAcrylic}"
                                TintOpacity="0.60" />-->
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Dark">
                            <!--  TODO: Regression  -->

                            <!--<AcrylicBrush
                                x:Key="NavigationBarBackground"
                                Windows10version1903:TintLuminosityOpacity="0.50"
                                BackgroundSource="HostBackdrop"
                                FallbackColor="{ThemeResource SolidBackgroundAcrylic}"
                                TintColor="{ThemeResource SolidBackgroundAcrylic}"
                                TintOpacity="0.50" />-->
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <!--  Toolbar size modes  -->

            <!--  Medium size mode  -->
            <DataTemplate x:Key="ToolBar_Small_SizeMode" x:DataType="vm:NavigationToolBarControlViewModel">
                <Grid Background="{ThemeResource SolidBackgroundAcrylic}">
                    <!--  Navigation  -->
                    <uc:NavigationControl
                        x:Name="NavigationControls"
                        Grid.Column="1"
                        ViewModel="{x:Bind NavigationControlModel, Mode=TwoWay, Converter={StaticResource InterfaceToNavigationControlViewModelConverter}}" />
                </Grid>
            </DataTemplate>

            <!--  Medium and large size mode  -->
            <DataTemplate x:Key="ToolBar_Large_SizeMode" x:DataType="vm:NavigationToolBarControlViewModel">
                <Grid
                    Height="80"
                    Padding="20,0,20,0"
                    HorizontalAlignment="Stretch"
                    Background="{ThemeResource SolidBackgroundAcrylic}">
                    <Grid.ColumnDefinitions>

                        <!--  Suggested actions  -->
                        <ColumnDefinition />

                        <!--  Navigation controls  -->
                        <ColumnDefinition Width="Auto" />

                        <!--  Settings and status center  -->
                        <ColumnDefinition />

                    </Grid.ColumnDefinitions>

                    <!--  Suggested actions  -->
                    <uc:SuggestedActionsControl
                        x:Name="SuggestedActions"
                        Grid.Column="0"
                        ViewModel="{x:Bind SuggestedActionsControlModel, Mode=TwoWay, Converter={StaticResource InterfaceToSuggestedActionsControlViewModelConverter}}" />

                    <!--  Navigation  -->
                    <uc:NavigationControl
                        x:Name="NavigationControls"
                        Grid.Column="1"
                        ViewModel="{x:Bind NavigationControlModel, Mode=TwoWay, Converter={StaticResource InterfaceToNavigationControlViewModelConverter}}" />

                    <!--  Status Center, Autopaste and Settings  -->
                    <StackPanel
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="8">

                        <!--  Autopaste button  -->
                        <Button
                            x:Name="Autopaste"
                            Height="48"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0">
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Spacing="10">
                                <Grid Padding="0,8,0,8">
                                    <FontIcon Glyph="&#xE77F;" />
                                </Grid>
                                <TextBlock
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Center"
                                    Text="{gxt:ResourceString Name=Autopaste}" />
                            </StackPanel>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <uc:AutopasteControl ViewModel="{x:Bind AutopasteControlViewModel, Mode=TwoWay}" />
                                </Flyout>
                            </Button.Flyout>
                        </Button>

                        <!--  Status Center Button  -->
                        <Button
                            x:Name="StatusCenter"
                            Height="48"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            Visibility="{x:Bind IsStatusCenterButtonVisible, Mode=OneWay}">
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Spacing="10">
                                <Grid Padding="0,8,0,8">
                                    <FontIcon Glyph="&#xF16A;" />
                                </Grid>
                                <TextBlock
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Center"
                                    Text="{gxt:ResourceString Name=StatusCenter}" />
                            </StackPanel>
                            <Button.Flyout>
                                <Flyout Placement="Top">
                                    <uc:StatusCenterControl />
                                </Flyout>
                            </Button.Flyout>
                            <tua:Implicit.ShowAnimations>
                                <tua:TranslationAnimation
                                    From="0, 4, 0"
                                    To="0"
                                    Duration="0:0:0.2" />
                                <tua:OpacityAnimation
                                    From="0"
                                    To="1"
                                    Duration="0:0:0.2" />
                            </tua:Implicit.ShowAnimations>
                            <tua:Implicit.HideAnimations>
                                <tua:TranslationAnimation
                                    From="0"
                                    To="0, -4, 0"
                                    Duration="0:0:0.2" />
                                <tua:OpacityAnimation
                                    From="1"
                                    To="0"
                                    Duration="0:0:0.2" />
                            </tua:Implicit.HideAnimations>
                        </Button>

                        <!--  Settings Button  -->
                        <Button
                            x:Name="SettingsButton"
                            Height="48"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            AutomationProperties.Name="Settings"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{x:Bind OpenSettingsCommand}">
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Spacing="10">
                                <Grid Padding="0,8,0,8">
                                    <muxc:AnimatedIcon x:Name="SettingsAnimatedIcon">
                                        <muxc:AnimatedIcon.Source>
                                            <animvis:AnimatedSettingsVisualSource />
                                        </muxc:AnimatedIcon.Source>
                                        <muxc:AnimatedIcon.FallbackIconSource>
                                            <muxc:SymbolIconSource Symbol="Setting" />
                                        </muxc:AnimatedIcon.FallbackIconSource>
                                    </muxc:AnimatedIcon>
                                </Grid>
                                <TextBlock
                                    Margin="0,0,0,2"
                                    VerticalAlignment="Center"
                                    Text="{gxt:ResourceString Name=Settings}" />
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <ContentPresenter x:Name="MainContentPresenter" HorizontalAlignment="Stretch" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!--  Large window  -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowThreshold}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainContentPresenter.ContentTemplate" Value="{StaticResource ToolBar_Large_SizeMode}" />
                    </VisualState.Setters>
                </VisualState>
                <!--  Medium window  -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowThreshold}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainContentPresenter.ContentTemplate" Value="{StaticResource ToolBar_Large_SizeMode}" />
                    </VisualState.Setters>
                </VisualState>
                <!--  Small window  -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallWindowThreshold}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainContentPresenter.ContentTemplate" Value="{StaticResource ToolBar_Small_SizeMode}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</UserControl>
